{"ast":null,"code":"import Editor from 'wangeditor';\nlet editor;\nfunction initWangEditor(content) {\n  setTimeout(() => {\n    if (!editor) {\n      editor = new Editor('#editor');\n      editor.config.placeholder = 'Content';\n      editor.config.uploadFileName = 'file';\n      editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload';\n      editor.create();\n    }\n    editor.txt.html(content);\n  }, 0);\n}\nexport default {\n  name: \"Department\",\n  data() {\n    return {\n      tableData: [],\n      pageNum: 1,\n      pageSize: 10,\n      total: 0,\n      clubName: null,\n      editorVisible: false,\n      fromVisible: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        clubName: [{\n          required: true,\n          message: 'Please enter club name',\n          trigger: 'blur'\n        }],\n        clubRepid: [{\n          required: true,\n          message: 'Please enter your club rep',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      repData: [],\n      viewData: null\n    };\n  },\n  created() {\n    this.load(1);\n    this.loadReps();\n  },\n  methods: {\n    viewEditor(description) {\n      this.viewData = description;\n      this.editorVisible = true;\n    },\n    loadReps() {\n      this.$request.get(\"/student/selectAll\").then(res => {\n        if (res.code === '200') {\n          this.repData = res.data;\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleAdd() {\n      this.form = {};\n      initWangEditor('');\n      this.fromVisible = true;\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      initWangEditor(this.form.description || '');\n      this.fromVisible = true;\n    },\n    cancel() {\n      this.fromVisible = false;\n      location.href = '/department';\n    },\n    save() {\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.form.description = editor.txt.html();\n          this.$request({\n            url: this.form.id ? '/department/update' : '/department/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              this.$message.success('Success');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    },\n    del(id) {\n      this.$confirm('Confirm Delete', 'Delete', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/department/delete/' + id).then(res => {\n          if (res.code === '200') {\n            this.$message.success('Success');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      this.ids = rows.map(v => v.id); //  [1,2]\n    },\n\n    delBatch() {\n      if (!this.ids.length) {\n        this.$message.warning('Select Data');\n        return;\n      }\n      this.$confirm('Please confirm delete', 'Delete', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/department/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            this.$message.success('Success');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/department/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          clubName: this.clubName\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.clubName = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleLogoSuccess(response, file, fileList) {\n      this.form.logo = response.data;\n    }\n  }\n};","map":{"version":3,"names":["Editor","editor","initWangEditor","content","setTimeout","config","placeholder","uploadFileName","uploadImgServer","create","txt","html","name","data","tableData","pageNum","pageSize","total","clubName","editorVisible","fromVisible","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","clubRepid","ids","repData","viewData","created","load","loadReps","methods","viewEditor","description","$request","get","then","res","code","$message","error","msg","handleAdd","handleEdit","row","stringify","cancel","location","href","save","$refs","formRef","validate","valid","url","id","method","success","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","params","list","reset","handleCurrentChange","handleLogoSuccess","file","fileList","logo"],"sources":["src/views/manager/Application.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"Please enter club name\" style=\"width: 200px\" v-model=\"clubName\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">Search</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">Reset</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\">\r\n      <el-button type=\"primary\" plain @click=\"handleAdd\">Insert</el-button>\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">Delete</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" stripe  @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"id\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column label=\"logo\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px; border-radius: 50%\" v-if=\"scope.row.logo\"\r\n                        :src=\"scope.row.logo\" :preview-src-list=\"[scope.row.logo]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"clubName\" label=\"Name\" show-overflow-tooltip></el-table-column>\r\n        <<el-table-column prop=\"description\" label=\"Club Description\" show-overflow-tooltip>\r\n        <template v-slot=\"scope\">\r\n          <el-button type=\"success\" @click=\"viewEditor(scope.row.description)\">View Description</el-button>\r\n        </template>\r\n      </el-table-column>\r\n        <el-table-column prop=\"studentName\" label=\"ClubRepresentative\"></el-table-column>\r\n\r\n        <el-table-column label=\"Modify\" width=\"180\" align=\"center\">\r\n          <template v-slot=\"scope\">\r\n            <el-button plain type=\"primary\" @click=\"handleEdit(scope.row)\" size=\"mini\">Edit</el-button>\r\n            <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>Delete</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"info\" :visible.sync=\"fromVisible\" width=\"60%\" :close-on-click-modal=\"false\" destroy-on-close @close=\"cancel\">\r\n      <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"logo\">\r\n          <el-upload\r\n              class=\"logo-uploader\"\r\n              :action=\"$baseUrl + '/files/upload'\"\r\n              :headers=\"{ token: user.token }\"\r\n              list-type=\"picture\"\r\n              :on-success=\"handleLogoSuccess\"\r\n          >\r\n            <el-button type=\"primary\">upload your club logo</el-button>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <el-form-item prop=\"clubName\" label=\"Club Name\">\r\n          <el-input v-model=\"form.clubName\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"description\" label=\"Description\">\r\n          <div id = \"editor\"></div>\r\n        </el-form-item>\r\n        <el-form-item prop=\"clubRepid\" label=\"Club Rep\">\r\n<!--          <el-select v-model=\"form.clubRepid\" placeholder = \"Please select your club rep\" style = \"width: 100%\">-->\r\n<!--            <el-option v-for = \"item in repData\" :label = \"item.name\" :value = \"item.id\"></el-option>-->\r\n<!--          </el-select>-->\r\n          <el-input v-model=\"form.clubRepid\" autocomplete=\"off\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">Cancel</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">Apply</el-button>\r\n      </div>\r\n    </el-dialog>\r\n    <el-dialog title=\"Club Description\" :visible.sync=\"editorVisible\" width=\"50%\">\r\n      <div v-html=\"this.viewData\" class=\"w-e-text\"></div>\r\n    </el-dialog>\r\n\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Editor from 'wangeditor'\r\n\r\nlet editor\r\nfunction initWangEditor(content) {\tsetTimeout(() => {\r\n  if (!editor) {\r\n    editor = new Editor('#editor')\r\n    editor.config.placeholder = 'Content'\r\n    editor.config.uploadFileName = 'file'\r\n    editor.config.uploadImgServer = 'http://localhost:9090/files/wang/upload'\r\n    editor.create()\r\n  }\r\n  editor.txt.html(content)\r\n}, 0)\r\n}\r\nexport default {\r\n  name: \"Department\",\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n      clubName: null,\r\n      editorVisible: false,\r\n      fromVisible: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        clubName: [\r\n          {required: true, message: 'Please enter club name', trigger: 'blur'},\r\n        ],\r\n        clubRepid: [\r\n          {required: true, message: 'Please enter your club rep', trigger: 'blur'},\r\n        ]\r\n      },\r\n      ids: [],\r\n      repData: [],\r\n      viewData: null,\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n    this.loadReps()\r\n  },\r\n  methods: {\r\n    viewEditor(description) {\r\n      this.viewData = description\r\n      this.editorVisible = true\r\n    },\r\n    loadReps(){\r\n      this.$request.get(\"/student/selectAll\").then(res=> {\r\n        if (res.code === '200'){\r\n          this.repData = res.data\r\n        } else {\r\n          this.$message.error(res.msg)\r\n        }\r\n      })\r\n    },\r\n    handleAdd() {\r\n      this.form = {}\r\n      initWangEditor('')\r\n      this.fromVisible = true\r\n    },\r\n    handleEdit(row) {\r\n      this.form = JSON.parse(JSON.stringify(row))\r\n      initWangEditor(this.form.description || '')\r\n      this.fromVisible = true\r\n    },\r\n    cancel() {\r\n      this.fromVisible = false\r\n      location.href = '/department'\r\n    },\r\n    save() {\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.form.description = editor.txt.html()\r\n          this.$request({\r\n            url: this.form.id ? '/department/update' : '/department/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {\r\n              this.$message.success('Success')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {\r\n      this.$confirm('Confirm Delete', 'Delete', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/department/delete/' + id).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('Success')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {\r\n      this.ids = rows.map(v => v.id)   //  [1,2]\r\n    },\r\n    delBatch() {\r\n      if (!this.ids.length) {\r\n        this.$message.warning('Select Data')\r\n        return\r\n      }\r\n      this.$confirm('Please confirm delete', 'Delete', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/department/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {\r\n            this.$message.success('Success')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/department/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          clubName: this.clubName,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.clubName = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n    handleLogoSuccess(response, file, fileList) {\r\n      this.form.logo = response.data\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}